"use strict";(self.webpackChunkclassic=self.webpackChunkclassic||[]).push([[4850],{3905:(e,t,a)=>{a.d(t,{Zo:()=>m,kt:()=>g});var n=a(7294);function o(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function l(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?l(Object(a),!0).forEach((function(t){o(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):l(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function r(e,t){if(null==e)return{};var a,n,o=function(e,t){if(null==e)return{};var a,n,o={},l=Object.keys(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||(o[a]=e[a]);return o}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(n=0;n<l.length;n++)a=l[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(o[a]=e[a])}return o}var s=n.createContext({}),d=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},m=function(e){var t=d(e.components);return n.createElement(s.Provider,{value:t},e.children)},p="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var a=e.components,o=e.mdxType,l=e.originalType,s=e.parentName,m=r(e,["components","mdxType","originalType","parentName"]),p=d(a),u=o,g=p["".concat(s,".").concat(u)]||p[u]||c[u]||l;return a?n.createElement(g,i(i({ref:t},m),{},{components:a})):n.createElement(g,i({ref:t},m))}));function g(e,t){var a=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var l=a.length,i=new Array(l);i[0]=u;var r={};for(var s in t)hasOwnProperty.call(t,s)&&(r[s]=t[s]);r.originalType=e,r[p]="string"==typeof e?e:o,i[1]=r;for(var d=2;d<l;d++)i[d]=a[d];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}u.displayName="MDXCreateElement"},7162:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>c,frontMatter:()=>l,metadata:()=>r,toc:()=>d});var n=a(7462),o=(a(7294),a(3905));const l={slug:"melodi-change-v1-1-5",title:"Melodi Unlit & Premium Changelog (v1.1.5)",authors:"alexxseven",tags:["Shaders","Melodi","Changelogs"]},i=void 0,r={permalink:"/blog/melodi-change-v1-1-5",source:"@site/blog/melodicl/2023-6-14-melodi-change-v1-1-5.md",title:"Melodi Unlit & Premium Changelog (v1.1.5)",description:"(\u2b50) = Premium only change.",date:"2023-06-14T00:00:00.000Z",formattedDate:"June 14, 2023",tags:[{label:"Shaders",permalink:"/blog/tags/shaders"},{label:"Melodi",permalink:"/blog/tags/melodi"},{label:"Changelogs",permalink:"/blog/tags/changelogs"}],readingTime:1.9,hasTruncateMarker:!1,authors:[{name:"AlexxSeven",title:"Local Potato",url:"https://alexxseven.com/",imageURL:"https://github.com/AlexxSeven.png",key:"alexxseven"}],frontMatter:{slug:"melodi-change-v1-1-5",title:"Melodi Unlit & Premium Changelog (v1.1.5)",authors:"alexxseven",tags:["Shaders","Melodi","Changelogs"]},prevItem:{title:"Melodi Unlit & Premium Changelog (v1.1.6)",permalink:"/blog/melodi-change-v1-1-6"}},s={authorsImageUrls:[void 0]},d=[{value:"Major Changes:",id:"major-changes",level:2},{value:"Minor Changes:",id:"minor-changes",level:2},{value:"Additions:",id:"additions",level:2}],m={toc:d},p="wrapper";function c(e){let{components:t,...a}=e;return(0,o.kt)(p,(0,n.Z)({},m,a,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("admonition",{title:"Legend",type:"note"},(0,o.kt)("p",{parentName:"admonition"},"(\u2b50) = Premium only change.",(0,o.kt)("br",{parentName:"p"}),"\n","(\ud83c\udd93) = Free only change.")),(0,o.kt)("admonition",{title:"Bug Warning!",type:"danger"},(0,o.kt)("p",{parentName:"admonition"},"There is currently a bug with opacity the causes the shader to default as transparent cutout! The current workaround is to set your alpha type to opaque even if it already says its set.")),(0,o.kt)("h2",{id:"major-changes"},"Major Changes:"),(0,o.kt)("admonition",{type:"caution"},(0,o.kt)("p",{parentName:"admonition"},"The changes in this section will affect the look of materials using previous versions! It's advised to use a copy/backup material instead to ensure you can rollback if needed.")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Fixed normal calculation when Diffuse Distortion is disabled."),(0,o.kt)("li",{parentName:"ul"},"Changed Fresnel Mask to ",(0,o.kt)("inlineCode",{parentName:"li"},"Texture Packer")," type."),(0,o.kt)("li",{parentName:"ul"},"Fixed distortion map blending across the shader."),(0,o.kt)("li",{parentName:"ul"},"Improved glow calculations and fixed some bad math."),(0,o.kt)("li",{parentName:"ul"},"(\ud83c\udd93) Fixed alpha mode not properly changing"),(0,o.kt)("li",{parentName:"ul"},"(\u2b50) Changed screenspace calculations and added ",(0,o.kt)("inlineCode",{parentName:"li"},"Object bound")," screenspace mode."),(0,o.kt)("li",{parentName:"ul"},"(\u2b50) Fixed bad math and parameter flow for emissive alt color. (Fixes Alt color not working if audiolink wasn't installed)")),(0,o.kt)("h2",{id:"minor-changes"},"Minor Changes:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Reorganized formulas for trail mask feature."),(0,o.kt)("li",{parentName:"ul"},"Moved Audiolink Debug into its own category so multiple materials can have it linked together. ",(0,o.kt)("a",{parentName:"li",href:"https://i.imgur.com/f1L1NAr.mp4"},"Example")),(0,o.kt)("li",{parentName:"ul"},"Set the ",(0,o.kt)("inlineCode",{parentName:"li"},"Custom Colors")," toggle to not hide if main color is being overridden."),(0,o.kt)("li",{parentName:"ul"},"Fixed missing help boxes that explained the color options under ",(0,o.kt)("inlineCode",{parentName:"li"},"Fresnel Parameters > Color Options.")),(0,o.kt)("li",{parentName:"ul"},"Reworked flow of the alt color function. (fixes AL fallback color on all alt color options.)"),(0,o.kt)("li",{parentName:"ul"},"(\u2b50) Fixed missing help boxes that explained the color options under ",(0,o.kt)("inlineCode",{parentName:"li"},"Emissive Adv Parameters > Emissive Alt Color."))),(0,o.kt)("h2",{id:"additions"},"Additions:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Added ",(0,o.kt)("inlineCode",{parentName:"li"},"ZTest Mode")," control under shader options menu."),(0,o.kt)("li",{parentName:"ul"},"Added ",(0,o.kt)("inlineCode",{parentName:"li"},"Preview Type")," control under the shader options menu."),(0,o.kt)("li",{parentName:"ul"},"Added a warning to the main area when Audiolink is debug-disabled in the shader."),(0,o.kt)("li",{parentName:"ul"},"Added a ",(0,o.kt)("inlineCode",{parentName:"li"},"_Color")," option to all features that allow selecting an alt color. This allows sampling/using the CC as an alt color."),(0,o.kt)("li",{parentName:"ul"},"Added a ",(0,o.kt)("inlineCode",{parentName:"li"},"Smooth Waves")," toggle to all wave mask settings."),(0,o.kt)("li",{parentName:"ul"},"(\u2b50) Added experimental Physically Based Lit mode."),(0,o.kt)("li",{parentName:"ul"},"(\u2b50) Added glow bypass toggle to Trail Mask."),(0,o.kt)("li",{parentName:"ul"},"(\u2b50) Added a ",(0,o.kt)("inlineCode",{parentName:"li"},"Use Main Color")," option to ",(0,o.kt)("inlineCode",{parentName:"li"},"Emissive Adv Parameters > Emissive Alt Color")),(0,o.kt)("li",{parentName:"ul"},"(\u2b50) Added a ",(0,o.kt)("inlineCode",{parentName:"li"},"Blend Env Lights")," toggle to Physically lit mode to reflect map lighting on objects. (Thanks to some code from ",(0,o.kt)("a",{parentName:"li",href:"https://github.com/kaitlyndotmoe"},"Kaitlyn"),"!)")))}c.isMDXComponent=!0}}]);